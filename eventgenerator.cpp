#include "eventgenerator.h"
#include "terminalprinter.h"

#include <QRandomGenerator>

EventGenerator::EventGenerator(TerminalPrinter* terminal, QObject* parent)
    : QObject(parent), terminal(terminal)
{
    loadEventTemplates();
    loadAnomalyGrades();
}

void EventGenerator::generate()
{
    int roll = QRandomGenerator::global()->bounded(1, 101);

    if (isAnomaly(roll)) {
        QString effect = describeAnomaly(roll);
        terminal->print(QString("üß® –ê–ù–û–ú–ê–õ–ò–Ø [%1]: %2").arg(roll).arg(effect));
        return;
    }

    EventType type = categorize(roll);
    auto texts = eventTexts.value(type);
    QString event = texts.isEmpty() ? "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ..." : texts.at(QRandomGenerator::global()->bounded(texts.size()));

    QString typeLabel;
    switch (type) {
    case EventType::Negative: typeLabel = "–ù–µ–≥–∞—Ç–∏–≤–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ"; break;
    case EventType::Neutral:  typeLabel = "–§–æ–Ω–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ"; break;
    case EventType::Positive: typeLabel = "–ü–æ–∑–∏—Ç–∏–≤–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ"; break;
    default: break;
    }

    terminal->print(QString("üé≤ [%1] %2").arg(roll).arg(typeLabel));
    terminal->print("üìç " + event);
}

bool EventGenerator::isAnomaly(int roll) const
{
    static QVector<int> excluded = {2, 3, 5, 23, 31, 41, 61, 71, 99, 100};
    if (excluded.contains(roll)) return false;
    if (roll == 13 || roll == 66) return true;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–æ—Å—Ç–æ–µ —á–∏—Å–ª–æ
    if (roll < 2) return false;
    for (int i = 2; i * i <= roll; ++i)
        if (roll % i == 0) return false;

    return true;
}

EventGenerator::EventType EventGenerator::categorize(int roll) const
{
    if (roll <= 20) return EventType::Negative;
    if (roll <= 80) return EventType::Neutral;
    return EventType::Positive;
}

QString EventGenerator::describeAnomaly(int roll) const
{
    if (anomalyGrades.contains(roll)) {
        auto g = anomalyGrades.value(roll);
        return QString("<span style='color:%1;'><b>%2</b></span>").arg(g.color, g.name);
    }
    return "<span style='color:#ff0000;'>–ù–ï–û–ü–û–ó–ù–ê–ù–ù–û–ï –ê–ù–û–ú–ê–õ–¨–ù–û–ï –Ø–í–õ–ï–ù–ò–ï</span>";
}

void EventGenerator::loadEventTemplates()
{
    eventTexts[EventType::Negative] = {
        "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∏–∑–¥–∞—ë—Ç —Ç—Ä–µ–≤–æ–∂–Ω—ã–π –ø–∏—Å–∫ –∏ –∑–∞–º–æ–ª–∫–∞–µ—Ç.",
        "–°–≤—è–∑—å —Å –≤–Ω–µ—à–Ω–∏–º –ø–µ—Ä–∏–º–µ—Ç—Ä–æ–º –ø–æ—Ç–µ—Ä—è–Ω–∞.",
        "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Ä–µ–∑–∫–æ –ø–∞–¥–∞–µ—Ç ‚Äî —á—Ç–æ-—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å —Å –∫–ª–∏–º–∞—Ç-–∫–æ–Ω—Ç—Ä–æ–ª–µ–º."
    };

    eventTexts[EventType::Neutral] = {
        "–°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–≤–µ–ª–∞ —Å–∞–º–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ. –í—Å—ë –≤ –Ω–æ—Ä–º–µ.",
        "–ü—ã–ª—å –º–µ–¥–ª–µ–Ω–Ω–æ –æ—Å–µ–¥–∞–µ—Ç –≤ –∫–æ—Ä–∏–¥–æ—Ä–µ.",
        "–ü—Ä–æ—Ö–æ–¥–∏—Ç –æ—á–µ—Ä–µ–¥–Ω–æ–π —Ü–∏–∫–ª —Ä–∞–±–æ—Ç—ã –æ—Å–≤–µ—â–µ–Ω–∏—è."
    };

    eventTexts[EventType::Positive] = {
        "–ù–∞–π–¥–µ–Ω –∏—Å—Ç–æ—á–Ω–∏–∫ –ø–∏—Ç–∞–Ω–∏—è. –í–æ–∑–º–æ–∂–µ–Ω –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫.",
        "–°–ª—É—á–∞–π–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã—è–≤–∏–ª–∞ –ø–æ–ª–µ–∑–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.",
        "–ó–∞–ø–∞—Å –ø—Ä–æ–≤–∏–∑–∏–∏ –ø—Ä–æ–¥–µ—Ä–∂–∏—Ç –≥—Ä—É–ø–ø—É –µ—â—ë –Ω–∞ —Å—É—Ç–∫–∏."
    };
}

void EventGenerator::loadAnomalyGrades()
{
    anomalyGrades = {
        {7,  {"–ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –æ–∑–∞—Ä–µ–Ω–∏–µ", "#00ff00"}},
        {11, {"–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–º—É –∫–∞–Ω–∞–ª—É", "#00aa00"}},
        {17, {"–ë–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–∏–µ –ø–æ–ª—è", "#33cc66"}},
        {19, {"–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏", "#cccc00"}},
        {29, {"–≠—Ö–æ —á—É–∂–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞", "#999933"}},
        {37, {"–ü–∞–º—è—Ç—å —Å–∏—Å—Ç–µ–º—ã –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∞", "#ff9900"}},
        {47, {"–≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π —Å–±–æ–π", "#cc6600"}},
        {53, {"–†–∞–∑–ª–æ–º –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ", "#cc3300"}},
        {66, {"–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ –ò–ó–û–õ–Ø–¶–ò–Ø", "#ff0000"}},
        {79, {"–ü–æ–ª–µ –•–∞–æ—Å–∞: –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç", "#990000"}},
        {83, {"–ü—Å–∏-–∫–æ–Ω—Ç–∞–∫—Ç. –ì—Ä—É–ø–ø–∞ –Ω–µ –æ—Å–æ–∑–Ω–∞—ë—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–µ–≥–æ.", "#990033"}},
        {97, {"–ü–û–õ–ù–ê–Ø –î–ï–ì–†–ê–î–ê–¶–ò–Ø –ö–û–ù–¢–£–†–ê", "#660000"}},
        {13, {"–ê–Ω–æ–º–∞–ª–∏—è 13. –ù–µ —Ç—Ä–æ–≥–∞—Ç—å. –ù–∏–∫–æ–≥–¥–∞.", "#8b0000"}}
    };
}
